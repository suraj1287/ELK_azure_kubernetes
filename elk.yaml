apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      stack: elk
  template:
    metadata:
      labels:
        app: elk
        stack: elk
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:6.4.1
        ports:
        - containerPort: 9200
        resources:
          limits:
            cpu: 1000m
            memory: 3Gi
          requests:
            cpu: 1000m
            memory: 3Gi
      - name: kibana
        image: docker.elastic.co/kibana/kibana:6.4.1
        ports:
        - containerPort: 5601
        env:
          - name: ELASTICSEARCH_URL
            value: "http://localhost:9200"
        resources:
          limits:
            cpu: 1000m
            memory: 3Gi
          requests:
            cpu: 1000m
            memory: 3Gi			
      - name: logstash
        image: docker.elastic.co/logstash/logstash:6.4.1
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 1000m
            memory: 3Gi
          requests:
            cpu: 1000m
            memory: 3Gi			
        args:
        - "-e"
        - "input { http { } } output { elasticsearch { hosts => [‘localhost:9200’] } }"
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elk
        securityContext:
          privileged: true
---
apiVersion: v1
kind: Service
metadata:
  name: elk
spec:
#  type: LoadBalancer
  ports:
  - name: elasticsearch
    port: 9200
    protocol: TCP
    targetPort: 9200
  - name: kibana	
    port: 80
    protocol: TCP
    targetPort: 5601
  - name: logstash
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: elk
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: elk
  annotations:
#    nginx.ingress.kubernetes.io/proxy-connect-timeout: "6000"
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
#    nginx.ingress.kubernetes.io/send-timeout: "6000"
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: elk.rishi.ai
    http:
      paths:
      - backend:
          serviceName: elk
          servicePort: 80
        path: /
